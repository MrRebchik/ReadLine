@page
@model RegisterModel

<h4 class="text-center p-2"> Регистрация</h4>
<form method="post">
    <div asp-validation-summary="All" class="text-danger"></div>
    <div class="form-group" style="margin-bottom: 40px;">
        <label>Имя пользователя</label>
        <input name="UserName" class="form-control" value="@Model.UserName" />
    </div>
    <div class="form-group" style="margin-bottom: 40px;">
        <label>Email</label>
        <input name="Email" class="form-control" value="@Model.Email" />
    </div>
    <div class="form-group" style="margin-bottom: 40px;">
        <label>Пароль</label>
        <input name="Password" class="form-control" value="@Model.Password" />
    </div>
    <button type="submit" class="btn btn-primary">Зарегистрироваться</button>
    <a class="btn btn-secondary" href="/Home/Index">На главную</a>
</form>

@functions{
    public class RegisterModel : PageModelBase{

        public RegisterModel(UserManager<IdentityUser> usrManager, ProfileContext profileContext) : base(usrManager, profileContext) { }

        [BindProperty][Required]
        public string UserName { get; set; }
        [BindProperty][Required][EmailAddress]
        public string Email { get; set; }
        [BindProperty][Required]
        public string Password { get; set; }
        public async Task<IActionResult> OnPostAsync()
        {
            if (ModelState.IsValid)
            {
                IdentityUser user = new IdentityUser { UserName = UserName, Email = Email };
                IdentityResult result = await UserManager.CreateAsync(user, Password);
                if (result.Succeeded)
                {
                    UserProfile profile = new UserProfile() { IdentityUser = user, IdentityUserName = user.UserName };
                    ProfileContext.Add(profile);
                    ProfileContext.SaveChanges();
                    return RedirectToPage("Profile");
                }
                else
                {
                    foreach (IdentityError err in result.Errors)
                    {
                        ModelState.AddModelError("", err.Description);
                    }
                }
            }
            return Page();
        }
    }
}
